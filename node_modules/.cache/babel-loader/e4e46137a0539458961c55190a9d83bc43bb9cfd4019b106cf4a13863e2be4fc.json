{"ast":null,"code":"var _jsxFileName = \"/home/crab/json2table/react/json-tables-viewer/src/components/JsonTableView.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JsonTableView = ({\n  endpoint,\n  baseUrl,\n  data,\n  loading,\n  error\n}) => {\n  const renderTable = () => {\n    if (!data) return null;\n    if (Array.isArray(data)) {\n      const headers = {};\n      data.forEach(item => {\n        if (typeof item === 'object' && item !== null) {\n          Object.keys(item).forEach(key => {\n            headers[key] = true;\n          });\n        }\n      });\n      const headerKeys = Object.keys(headers);\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"windows-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headerKeys.map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headerKeys.map(key => {\n              var _item$key;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: typeof item[key] === 'object' ? JSON.stringify(item[key]) : String((_item$key = item[key]) !== null && _item$key !== void 0 ? _item$key : '')\n              }, `${index}-${key}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this);\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    } else if (typeof data === 'object' && data !== null) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"windows-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(data).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: typeof value === 'object' ? JSON.stringify(value) : String(value !== null && value !== void 0 ? value : '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: String(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"endpoint-url\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), \" \", endpoint.startsWith('http') ? endpoint : `${baseUrl}${endpoint}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), data && renderTable()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = JsonTableView;\nexport default JsonTableView;\nvar _c;\n$RefreshReg$(_c, \"JsonTableView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","JsonTableView","endpoint","baseUrl","data","loading","error","renderTable","Array","isArray","headers","forEach","item","Object","keys","key","headerKeys","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","index","_item$key","JSON","stringify","String","entries","value","startsWith","_c","$RefreshReg$"],"sources":["/home/crab/json2table/react/json-tables-viewer/src/components/JsonTableView.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst JsonTableView = ({ endpoint, baseUrl, data, loading, error }) => {\r\n  const renderTable = () => {\r\n    if (!data) return null;\r\n    \r\n    if (Array.isArray(data)) {\r\n      const headers = {};\r\n      data.forEach(item => {\r\n        if (typeof item === 'object' && item !== null) {\r\n          Object.keys(item).forEach(key => {\r\n            headers[key] = true;\r\n          });\r\n        }\r\n      });\r\n      \r\n      const headerKeys = Object.keys(headers);\r\n      \r\n      return (\r\n        <table className=\"windows-table\">\r\n          <thead>\r\n            <tr>\r\n              {headerKeys.map(key => (\r\n                <th key={key}>{key}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((item, index) => (\r\n              <tr key={index}>\r\n                {headerKeys.map(key => (\r\n                  <td key={`${index}-${key}`}>\r\n                    {typeof item[key] === 'object' \r\n                      ? JSON.stringify(item[key]) \r\n                      : String(item[key] ?? '')}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    } else if (typeof data === 'object' && data !== null) {\r\n      return (\r\n        <table className=\"windows-table\">\r\n          <tbody>\r\n            {Object.entries(data).map(([key, value]) => (\r\n              <tr key={key}>\r\n                <th>{key}</th>\r\n                <td>\r\n                  {typeof value === 'object' \r\n                    ? JSON.stringify(value) \r\n                    : String(value ?? '')}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n    \r\n    return <div>{String(data)}</div>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"tab-content\">\r\n      <div className=\"endpoint-url\">\r\n        <strong>Запрос:</strong> {endpoint.startsWith('http') ? endpoint : `${baseUrl}${endpoint}`}\r\n      </div>\r\n      \r\n      {loading && <div className=\"loading\">Загрузка...</div>}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {data && renderTable()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JsonTableView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/crab/json2table/react/json-tables-viewer/src/components/JsonTableView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JsonTableView = ({\n  data,\n  meta,\n  loading,\n  error\n}) => {\n  _s();\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const requestSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  const sortedData = React.useMemo(() => {\n    if (!data || !sortConfig.key) return data;\n    return [...data].sort((a, b) => {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'asc' ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n  }, [data, sortConfig]);\n  const renderTable = () => {\n    if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this);\n    try {\n      if (data.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: \"\\u041C\\u0430\\u0441\\u0441\\u0438\\u0432 \\u043F\\u0443\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }, this);\n      const headers = Object.keys(data[0] || {});\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"windows-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: headers.map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => requestSort(key),\n                className: sortConfig.key === key ? `sorted-${sortConfig.direction}` : '',\n                children: [key, sortConfig.key === key && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sort-arrow\",\n                  children: sortConfig.direction === 'asc' ? ' ↑' : ' ↓'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sortedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: headers.map(key => {\n                var _item$key;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: typeof item[key] === 'object' ? JSON.stringify(item[key]) : String((_item$key = item[key]) !== null && _item$key !== void 0 ? _item$key : '')\n                }, `${index}-${key}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this);\n              })\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), meta && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Meta \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"windows-table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(meta).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: typeof value === 'object' ? JSON.stringify(value) : String(value !== null && value !== void 0 ? value : '')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    } catch (err) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043E\\u0442\\u0440\\u0438\\u0441\\u043E\\u0432\\u043A\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-content\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), renderTable()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(JsonTableView, \"damCieyg69Ho6CefWhK7cx2YyH4=\");\n_c = JsonTableView;\nexport default JsonTableView;\nvar _c;\n$RefreshReg$(_c, \"JsonTableView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","JsonTableView","data","meta","loading","error","_s","sortConfig","setSortConfig","key","direction","requestSort","sortedData","useMemo","sort","a","b","renderTable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","headers","Object","keys","map","onClick","item","index","_item$key","JSON","stringify","String","entries","value","err","_c","$RefreshReg$"],"sources":["/home/crab/json2table/react/json-tables-viewer/src/components/JsonTableView.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst JsonTableView = ({ data, meta, loading, error }) => {\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const sortedData = React.useMemo(() => {\r\n    if (!data || !sortConfig.key) return data;\r\n\r\n    return [...data].sort((a, b) => {\r\n      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n        return sortConfig.direction === 'asc' ? -1 : 1;\r\n      }\r\n      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n        return sortConfig.direction === 'asc' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }, [data, sortConfig]);\r\n\r\n  const renderTable = () => {\r\n    if (!data) return <div className=\"no-data\">Данные не загружены</div>;\r\n    \r\n    try {\r\n      if (data.length === 0) return <div className=\"no-data\">Массив пуст</div>;\r\n      \r\n      const headers = Object.keys(data[0] || {});\r\n      \r\n      return (\r\n        <>\r\n          <table className=\"windows-table\">\r\n            <thead>\r\n              <tr>\r\n                {headers.map(key => (\r\n                  <th \r\n                    key={key}\r\n                    onClick={() => requestSort(key)}\r\n                    className={sortConfig.key === key ? `sorted-${sortConfig.direction}` : ''}\r\n                  >\r\n                    {key}\r\n                    {sortConfig.key === key && (\r\n                      <span className=\"sort-arrow\">\r\n                        {sortConfig.direction === 'asc' ? ' ↑' : ' ↓'}\r\n                      </span>\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sortedData.map((item, index) => (\r\n                <tr key={index}>\r\n                  {headers.map(key => (\r\n                    <td key={`${index}-${key}`}>\r\n                      {typeof item[key] === 'object' \r\n                        ? JSON.stringify(item[key]) \r\n                        : String(item[key] ?? '')}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          {meta && (\r\n            <div className=\"meta-section\">\r\n              <h3>Meta информация:</h3>\r\n              <table className=\"windows-table\">\r\n                <tbody>\r\n                  {Object.entries(meta).map(([key, value]) => (\r\n                    <tr key={key}>\r\n                      <th>{key}</th>\r\n                      <td>\r\n                        {typeof value === 'object' \r\n                          ? JSON.stringify(value) \r\n                          : String(value ?? '')}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    } catch (err) {\r\n      return <div className=\"error-message\">Ошибка отрисовки данных</div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tab-content\">\r\n      {loading && <div className=\"loading\">Загрузка...</div>}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {renderTable()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JsonTableView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}